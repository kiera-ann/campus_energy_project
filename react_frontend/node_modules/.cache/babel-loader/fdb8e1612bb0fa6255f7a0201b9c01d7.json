{"ast":null,"code":"var _jsxFileName = \"/Users/kierarobinson/Downloads/learning-app-main 2/src/components/WeatherInfo.js\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeatherInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    if ('geolocation' in navigator) {\n      console.log('geo available');\n    } else {\n      console.log('geo unavailable');\n    }\n\n    this.state = {\n      color: '#42B0ED',\n      w: 260,\n      h: 140,\n      clouds: 1,\n      humidity: 30,\n      wind: 10,\n      weather: 'clear',\n      temp: 40,\n      long: -76.65,\n      lat: 40.3,\n      locationRetrived: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.locationRetrived) {\n      this.getPosition();\n    }\n\n    this.updateWeather();\n    this.timer = setInterval(() => this.updateWeather(), 30000);\n  }\n\n  getPosition() {\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      this.setState({\n        long: longitude,\n        lat: latitude\n      });\n    };\n\n    const error = () => {\n      console.log('unable to retrieve location');\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    this.setState({\n      locationRetrived: true\n    });\n  }\n\n  updateWeather() {\n    fetch('http://api.openweathermap.org/data/2.5/weather?lat=' + this.state.lat + '&lon=' + this.state.long + '&appid=2fccc20373f66c6474568d4ef2852b4f').then(response => response.json()).then(result => {\n      this.setState({\n        clouds: result.clouds.all,\n        humidity: result.main.humidity,\n        wind: Math.round(result.wind.speed * 2.23),\n        weather: result.weather[0].main,\n        temp: Math.round((result.main.temp - 273.15) * 1.8 + 32)\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"colorBox\",\n      style: {\n        backgroundColor: this.state.color,\n        width: this.state.w,\n        height: this.state.h,\n        marginLeft: 0,\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        marginBottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: 0\n        },\n        children: \"weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 100,\n          alignContent: 'stretch'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            marginRight: 17\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"bottomText\",\n            children: [\"clouds: \", this.state.clouds, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), \"humidity: \", this.state.humidity, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), \"wind: \", this.state.wind, \"mph\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 70,\n              marginTop: -17\n            },\n            children: [\" \", this.state.temp, '\\u00b0']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), \"Princeton, NJ\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), \" \", this.state.weather]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherInfo;","map":{"version":3,"sources":["/Users/kierarobinson/Downloads/learning-app-main 2/src/components/WeatherInfo.js"],"names":["PropTypes","Component","WeatherInfo","constructor","props","navigator","console","log","state","color","w","h","clouds","humidity","wind","weather","temp","long","lat","locationRetrived","componentDidMount","getPosition","updateWeather","timer","setInterval","success","position","latitude","coords","longitude","setState","error","geolocation","getCurrentPosition","fetch","then","response","json","result","all","main","Math","round","speed","render","backgroundColor","width","height","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","marginBottom","alignContent","display","marginRight","fontSize","marginTop"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport { Component } from 'react'\n\nclass WeatherInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        if ('geolocation' in navigator) {\n            console.log('geo available');\n        } else {\n            console.log('geo unavailable');\n        }\n\n        this.state = {\n            color: '#42B0ED',\n            w: 260,\n            h: 140,\n            clouds: 1,\n            humidity: 30,\n            wind: 10,\n            weather: 'clear',\n            temp: 40,\n            long: -76.65,\n            lat: 40.3,\n            locationRetrived: false,\n        }\n    }\n\n    componentDidMount() {\n        if(!this.state.locationRetrived) { \n            this.getPosition()\n        }\n        this.updateWeather();\n        this.timer = setInterval(() => this.updateWeather(), 30000);\n    }\n\n    getPosition() {\n        const success = position => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            this.setState({\n                long: longitude,\n                lat: latitude,\n            });\n        }\n        \n        const error = () => {\n            console.log('unable to retrieve location')\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error);\n\n        this.setState({ locationRetrived: true, })\n    }\n\n    updateWeather() {\n        fetch('http://api.openweathermap.org/data/2.5/weather?lat=' + this.state.lat + \n        '&lon=' + this.state.long + '&appid=2fccc20373f66c6474568d4ef2852b4f')\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    clouds: result.clouds.all,\n                    humidity: result.main.humidity,\n                    wind: Math.round(result.wind.speed * 2.23),\n                    weather: result.weather[0].main,\n                    temp: Math.round((result.main.temp-273.15)*1.8+32),\n                });\n            })\n    }\n\n    render() {\n        return (\n            <div class='colorBox' style={{ backgroundColor: this.state.color, width: this.state.w, \n                                        height: this.state.h, marginLeft: 0, borderTopLeftRadius: 0, \n                                        borderBottomLeftRadius: 0, marginBottom: 5}}>\n                <h1 style={{ marginBottom: 0 }}>weather</h1>\n                    <div style={{ height: 100, alignContent: 'stretch' }}>\n                        <div style={{ display: 'inline-block', marginRight: 17 }}>\n                        <p class='bottomText'>clouds: {this.state.clouds}%\n                        <br />humidity: {this.state.humidity}%\n                        <br />wind: {this.state.wind}mph\n                        </p>\n                    </div>\n                    <div style={{ display: 'inline-block' }}>\n                        <p style={{ fontSize: 70, marginTop: -17 }}> {this.state.temp}{'\\u00b0'}</p>\n                        Princeton, NJ\n                        <br /> {this.state.weather}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WeatherInfo\n"]},"metadata":{},"sourceType":"module"}