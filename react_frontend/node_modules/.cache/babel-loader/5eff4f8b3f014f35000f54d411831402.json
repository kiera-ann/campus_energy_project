{"ast":null,"code":"import _classCallCheck from\"/Users/kierarobinson/Downloads/learning-app-main 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kierarobinson/Downloads/learning-app-main 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kierarobinson/Downloads/learning-app-main 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kierarobinson/Downloads/learning-app-main 2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WeatherInfo=/*#__PURE__*/function(_Component){_inherits(WeatherInfo,_Component);var _super=_createSuper(WeatherInfo);function WeatherInfo(props){var _this;_classCallCheck(this,WeatherInfo);_this=_super.call(this,props);if('geolocation'in navigator){console.log('geo available');}else{console.log('geo unavailable');}_this.state={color:'#42B0ED',w:260,h:140,clouds:1,humidity:30,wind:10,weather:'clear',temp:40,long:-76.65,lat:40.3,locationRetrived:false};return _this;}_createClass(WeatherInfo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(!this.state.locationRetrived){this.getPosition();}this.updateWeather();this.timer=setInterval(function(){return _this2.updateWeather();},30000);}},{key:\"getPosition\",value:function getPosition(){var _this3=this;var success=function success(position){var latitude=position.coords.latitude;var longitude=position.coords.longitude;_this3.setState({long:longitude,lat:latitude});};var error=function error(){console.log('unable to retrieve location');};navigator.geolocation.getCurrentPosition(success,error);this.setState({locationRetrived:true});}},{key:\"updateWeather\",value:function updateWeather(){var _this4=this;fetch('http://api.openweathermap.org/data/2.5/weather?lat='+this.state.lat+'&lon='+this.state.long+'&appid=2fccc20373f66c6474568d4ef2852b4f').then(function(response){return response.json();}).then(function(result){_this4.setState({clouds:result.clouds.all,humidity:result.main.humidity,wind:Math.round(result.wind.speed*2.23),weather:result.weather[0].main,temp:Math.round((result.main.temp-273.15)*1.8+32)});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{class:\"colorBox\",style:{backgroundColor:this.state.color,width:this.state.w,height:this.state.h,marginLeft:0,borderTopLeftRadius:0,borderBottomLeftRadius:0,marginBottom:5},children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginBottom:0},children:\"weather\"}),/*#__PURE__*/_jsxs(\"div\",{style:{height:100,alignContent:'stretch'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'inline-block',marginRight:17},children:/*#__PURE__*/_jsxs(\"p\",{class:\"bottomText\",children:[\"clouds: \",this.state.clouds,\"%\",/*#__PURE__*/_jsx(\"br\",{}),\"humidity: \",this.state.humidity,\"%\",/*#__PURE__*/_jsx(\"br\",{}),\"wind: \",this.state.wind,\" mph\"]})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline-block'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:70,marginTop:-17},children:[\" \",this.state.temp,\"\\xB0\"]}),\"Princeton, NJ\",/*#__PURE__*/_jsx(\"br\",{}),\" \",this.state.weather]})]})]});}}]);return WeatherInfo;}(Component);export default WeatherInfo;","map":{"version":3,"sources":["/Users/kierarobinson/Downloads/learning-app-main 2/src/components/WeatherInfo.js"],"names":["Component","WeatherInfo","props","navigator","console","log","state","color","w","h","clouds","humidity","wind","weather","temp","long","lat","locationRetrived","getPosition","updateWeather","timer","setInterval","success","position","latitude","coords","longitude","setState","error","geolocation","getCurrentPosition","fetch","then","response","json","result","all","main","Math","round","speed","backgroundColor","width","height","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","marginBottom","alignContent","display","marginRight","fontSize","marginTop"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport { Component } from 'react'\n\nclass WeatherInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        if ('geolocation' in navigator) {\n            console.log('geo available');\n        } else {\n            console.log('geo unavailable');\n        }\n\n        this.state = {\n            color: '#42B0ED',\n            w: 260,\n            h: 140,\n            clouds: 1,\n            humidity: 30,\n            wind: 10,\n            weather: 'clear',\n            temp: 40,\n            long: -76.65,\n            lat: 40.3,\n            locationRetrived: false,\n        }\n    }\n\n    componentDidMount() {\n        if(!this.state.locationRetrived) { \n            this.getPosition()\n        }\n        this.updateWeather();\n        this.timer = setInterval(() => this.updateWeather(), 30000);\n    }\n\n    getPosition() {\n        const success = position => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            this.setState({\n                long: longitude,\n                lat: latitude,\n            });\n        }\n        \n        const error = () => {\n            console.log('unable to retrieve location')\n        }\n\n        navigator.geolocation.getCurrentPosition(success, error);\n\n        this.setState({ locationRetrived: true, })\n    }\n\n    updateWeather() {\n        fetch('http://api.openweathermap.org/data/2.5/weather?lat=' + this.state.lat + \n        '&lon=' + this.state.long + '&appid=2fccc20373f66c6474568d4ef2852b4f')\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    clouds: result.clouds.all,\n                    humidity: result.main.humidity,\n                    wind: Math.round(result.wind.speed * 2.23),\n                    weather: result.weather[0].main,\n                    temp: Math.round((result.main.temp-273.15)*1.8+32),\n                });\n            })\n    }\n\n    render() {\n        return (\n            <div class='colorBox' style={{ backgroundColor: this.state.color, width: this.state.w, \n                                        height: this.state.h, marginLeft: 0, borderTopLeftRadius: 0, \n                                        borderBottomLeftRadius: 0, marginBottom: 5}}>\n                <h1 style={{ marginBottom: 0 }}>weather</h1>\n                    <div style={{ height: 100, alignContent: 'stretch' }}>\n                        <div style={{ display: 'inline-block', marginRight: 17 }}>\n                        <p class='bottomText'>clouds: {this.state.clouds}%\n                        <br />humidity: {this.state.humidity}%\n                        <br />wind: {this.state.wind} mph\n                        </p>\n                    </div>\n                    <div style={{ display: 'inline-block' }}>\n                        <p style={{ fontSize: 70, marginTop: -17 }}> {this.state.temp}{'\\u00b0'}</p>\n                        Princeton, NJ\n                        <br /> {this.state.weather}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WeatherInfo\n"]},"metadata":{},"sourceType":"module"}