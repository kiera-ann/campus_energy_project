{"ast":null,"code":"var _jsxFileName = \"/Users/kierarobinson/Downloads/learning-app-main 2/src/components/GraphInfoContainer.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js';\nimport EnergyDistribution from './EnergyDistribution';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst days = ['Hourly energy use (Wh)', 'Hourly energy intensity (lbs CO2/kWh)'];\nconst dataUnits = ['watt-hours', 'lbs CO2/wh'];\nconst dataLabel = ['energy', 'intensity'];\n\nclass GraphInfoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDayWeek = () => {\n      this.setState({\n        toggle: (this.state.toggle + 1) % 2\n      });\n    };\n\n    this.setConsumptionGraph = () => {\n      this.setState({\n        toggle: 0\n      });\n    };\n\n    this.setIntensityGraph = () => {\n      this.setState({\n        toggle: 1\n      });\n    };\n\n    this.getCorrectLabels = () => {\n      if (this.state.toggle) return this.state.ilabels;else return this.state.clabels;\n    };\n\n    this.getCorrectValues = () => {\n      if (this.state.toggle) return this.state.ivalues;else return this.state.cvalues;\n    };\n\n    this.state = {\n      graphH: 140,\n      graphW: 503,\n      graphColor: '#0D6CA1',\n      clabels: [],\n      cvalues: [],\n      ilabels: [],\n      ivalues: [],\n      toggle: 0\n    };\n  }\n\n  componentDidMount() {\n    this.fetchGraphInfo();\n    this.timer = setInterval(() => this.toggleDayWeek(), 60000);\n    this.timer2 = setInterval(() => this.fetchGraphInfo(), 120000);\n  }\n\n  componentWillUnmount() {\n    this.timer && clearInterval(this.timer);\n    this.timer = false;\n    this.timer2 && clearInterval(this.timer2);\n    this.timer2 = false;\n  }\n\n  fetchGraphInfo() {\n    this.fetchIntensity();\n    this.fetchConsumption();\n  }\n\n  fetchIntensity() {\n    let mounted = true;\n    fetch('http://140.180.133.113:4545/api/v1/resources/campus_energy_intensity/24hr').then(response => response.json()).then(results => {\n      if (mounted) {\n        if (results.campus_energy_intensity && Object.keys(results.campus_energy_intensity)) {\n          this.setState({\n            ilabels: Object.keys(results.campus_energy_intensity),\n            ivalues: Object.values(results.campus_energy_intensity)\n          });\n        }\n      }\n    });\n    return () => mounted = false;\n  }\n\n  fetchConsumption() {\n    let mounted = true;\n    fetch('http://140.180.133.113:4545/api/v1/resources/u/kr/dorm_power_co2/current').then(response => response.json()).then(results => {\n      if (mounted) {\n        if (results.daily_graph_energy_wh_data && Object.keys(results.daily_graph_energy_wh_data)) {\n          this.setState({\n            clabels: Object.keys(results.daily_graph_energy_wh_data),\n            cvalues: Object.values(results.daily_graph_energy_wh_data)\n          });\n        }\n      }\n    });\n    return () => mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"graphContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"colorBox\",\n        style: {\n          backgroundColor: this.state.graphColor,\n          width: this.state.graphW,\n          height: this.state.graphH,\n          margin: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"energy tracker|currently displaying: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: days[this.state.toggle]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          ref: this.chartReference,\n          data: {\n            labels: this.getCorrectLabels(),\n            datasets: [{\n              label: dataLabel[this.state.toggle],\n              data: this.getCorrectValues(),\n              backgroundColor: '#fff'\n            }]\n          },\n          width: 460,\n          height: 100,\n          options: {\n            maintainAspectRatio: false,\n            legend: {\n              display: false\n            },\n            scales: {\n              yAxes: [{\n                position: 'right',\n                gridLines: [{\n                  display: false\n                }],\n                ticks: {\n                  fontColor: '#fff',\n                  fontSize: 8,\n                  maxTicksLimit: 5,\n                  padding: 10,\n                  min: this.state.toggle ? Math.round((Math.min(...this.state.ivalues) - .1) / .1) * .1 : Math.round(Math.max(Math.min(...this.state.cvalues) - 100, 0) / 100) * 100\n                },\n                scaleLabel: {\n                  display: true,\n                  labelString: dataUnits[this.state.toggle],\n                  fontColor: '#fff',\n                  fontSize: 8\n                }\n              }],\n              xAxes: [{\n                // display: true, // change this to false to remove x-axis labels\n                display: false // change this to false to remove x-axis labels\n                // ticks: {\n                //     maxTicksLimit: 4,\n                //     fontColor: '#fff',\n                //     fontSize: 8,\n                //     align: 'center',\n                // }\n\n              }]\n            },\n            dataset: {\n              barPercentage: .95\n            },\n            layout: {\n              padding: {\n                left: 0,\n                right: -4,\n                top: 10,\n                bottom: 12\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"lowerContainer\",\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"defaultButton\",\n            onClick: this.setConsumptionGraph,\n            children: \"display personal energy use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"defaultButton\",\n            onClick: this.setIntensityGraph,\n            children: \"display campus energy intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EnergyDistribution, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GraphInfoContainer;","map":{"version":3,"sources":["/Users/kierarobinson/Downloads/learning-app-main 2/src/components/GraphInfoContainer.js"],"names":["React","Bar","EnergyDistribution","days","dataUnits","dataLabel","GraphInfoContainer","Component","constructor","props","toggleDayWeek","setState","toggle","state","setConsumptionGraph","setIntensityGraph","getCorrectLabels","ilabels","clabels","getCorrectValues","ivalues","cvalues","graphH","graphW","graphColor","componentDidMount","fetchGraphInfo","timer","setInterval","timer2","componentWillUnmount","clearInterval","fetchIntensity","fetchConsumption","mounted","fetch","then","response","json","results","campus_energy_intensity","Object","keys","values","daily_graph_energy_wh_data","render","backgroundColor","width","height","margin","chartReference","labels","datasets","label","data","maintainAspectRatio","legend","display","scales","yAxes","position","gridLines","ticks","fontColor","fontSize","maxTicksLimit","padding","min","Math","round","max","scaleLabel","labelString","xAxes","dataset","barPercentage","layout","left","right","top","bottom","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js'\nimport EnergyDistribution from './EnergyDistribution'\n\nconst days = ['Hourly energy use (Wh)', 'Hourly energy intensity (lbs CO2/kWh)']\nconst dataUnits = ['watt-hours', 'lbs CO2/wh']\nconst dataLabel = ['energy', 'intensity']\n\nclass GraphInfoContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            graphH: 140,\n            graphW: 503,\n            graphColor: '#0D6CA1',\n            clabels: [],\n            cvalues: [],\n            ilabels: [],\n            ivalues: [],\n            toggle: 0,\n        }\n    }\n    \n    componentDidMount() {\n        this.fetchGraphInfo();\n        this.timer = setInterval(() => this.toggleDayWeek(), 60000);\n        this.timer2 = setInterval(() => this.fetchGraphInfo(), 120000);\n    }\n\n    componentWillUnmount () {\n        this.timer && clearInterval(this.timer);\n        this.timer = false;\n        this.timer2 && clearInterval(this.timer2);\n        this.timer2 = false;\n    }\n\n    fetchGraphInfo() {\n        this.fetchIntensity();\n        this.fetchConsumption();\n    }\n\n    fetchIntensity() {\n        let mounted = true;\n        fetch('http://140.180.133.113:4545/api/v1/resources/campus_energy_intensity/24hr')\n            .then(response => response.json())\n            .then(results => {\n                if(mounted) {\n                    if (results.campus_energy_intensity && Object.keys(results.campus_energy_intensity)) {\n                        this.setState({\n                            ilabels: Object.keys(results.campus_energy_intensity),\n                            ivalues: Object.values(results.campus_energy_intensity),\n                        });\n                    }\n                }\n            })\n        return () => mounted = false;\n    }\n\n    fetchConsumption() {\n        let mounted = true;\n        fetch('http://140.180.133.113:4545/api/v1/resources/u/kr/dorm_power_co2/current')\n            .then(response => response.json())\n            .then(results => {\n                if(mounted) {\n                    if (results.daily_graph_energy_wh_data && Object.keys(results.daily_graph_energy_wh_data)) {\n                        this.setState({\n                            clabels: Object.keys(results.daily_graph_energy_wh_data),\n                            cvalues: Object.values(results.daily_graph_energy_wh_data),\n                        });\n                    }\n                }\n            })\n        return () => mounted = false;\n    }\n\n    toggleDayWeek = () => {\n        this.setState({ toggle: (this.state.toggle+1)%2 });\n    }\n\n    setConsumptionGraph = () => {\n        this.setState({ toggle: 0 })\n    }\n\n    setIntensityGraph = () => {\n        this.setState({ toggle: 1 })\n    }\n\n    getCorrectLabels = () => {\n        if(this.state.toggle) return this.state.ilabels;\n        else return this.state.clabels;\n    }\n\n    getCorrectValues = () => {\n        if(this.state.toggle) return this.state.ivalues;\n        else return this.state.cvalues;\n    }\n\n    render() {\n        return (\n            <div class='graphContainer'>\n                <div class='colorBox' style={{ backgroundColor: this.state.graphColor, width: this.state.graphW, \n                                        height: this.state.graphH, margin: 0}}>\n                <h1>energy tracker|currently displaying: <b>{days[this.state.toggle]}</b></h1>\n                <Bar ref={this.chartReference}\n                data={{\n                    labels: this.getCorrectLabels(),\n                    datasets:[{\n                        label: dataLabel[this.state.toggle],\n                        data: this.getCorrectValues(),\n                        backgroundColor: '#fff',\n                    }]\n\n                }} \n                width={460} height={100}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: { display: false },\n                    scales: {\n                        yAxes: [{ \n                            position: 'right',\n                            gridLines: [{ display: false }],\n                            ticks: { \n                                fontColor: '#fff',\n                                fontSize: 8,\n                                maxTicksLimit: 5,\n                                padding: 10,\n                                min: this.state.toggle ? Math.round((Math.min(...this.state.ivalues)-.1)/.1)*.1 : \n                                                         Math.round(Math.max(Math.min(...this.state.cvalues)-100, 0)/100)*100,\n                            },\n                            scaleLabel: {\n                                display: true,\n                                labelString: dataUnits[this.state.toggle],\n                                fontColor: '#fff',\n                                fontSize: 8,\n                            },\n                        }],\n                        xAxes: [{ \n                            // display: true, // change this to false to remove x-axis labels\n                            display: false, // change this to false to remove x-axis labels\n                            // ticks: {\n                            //     maxTicksLimit: 4,\n                            //     fontColor: '#fff',\n                            //     fontSize: 8,\n                            //     align: 'center',\n                            // }\n                        }],\n                    },\n                    dataset: { barPercentage: .95, },\n                    layout: {\n                        padding: {\n                            left: 0,\n                            right: -4,\n                            top: 10,\n                            bottom: 12,\n                        }\n                    }\n                }}\n                />\n            </div>\n            \n                <div class='lowerContainer' style={{ marginTop: 10 }}>\n                    <div class='buttonContainer'>\n                        <button class=\"defaultButton\" onClick={this.setConsumptionGraph}>display personal energy use</button>\n                        <button class=\"defaultButton\" onClick={this.setIntensityGraph}>display campus energy intensity</button>\n                    </div>\n                    <EnergyDistribution />\n                </div>\n            </div>\n        )\n    }  \n}\n\nexport default GraphInfoContainer\n"]},"metadata":{},"sourceType":"module"}